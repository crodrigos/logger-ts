{"version":3,"sources":["../src/index.ts","../src/Logger/Logger.ts"],"sourcesContent":["import Logger from \"./Logger/Logger\";\r\n\r\nexport default Logger;","interface Log {\r\n    message: string,\r\n    date: Date,\r\n    type: LogType\r\n}\r\n\r\nenum LogType {\r\n    Log = \"‚úÖ\",\r\n    Warning = \"üü®\",\r\n    Error = \"‚ùå\"\r\n}\r\n\r\nexport const LOG_ICON = \"‚úÖ\"\r\nexport const WARN_ICON = \"üü®\"\r\nexport const ERROR_ICON = \"‚ùå\"\r\n\r\nexport class Logger {\r\n\r\n    private static instance: Logger;\r\n\r\n    private logs: Log[] = [];\r\n\r\n    private constructor() { }\r\n\r\n    public static GetInstance(): Logger {\r\n        if (!this.instance) {\r\n            this.instance = new Logger();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    private Add(log: Log) {\r\n        this.logs.push(log);\r\n        console.log(this.Format(log))\r\n    }\r\n\r\n    public static Log(message: string) {\r\n        Logger.GetInstance().Log(message)\r\n    }\r\n\r\n    public static Warn(message: string) {\r\n        Logger.GetInstance().Warn(message);\r\n    }\r\n\r\n    public static Error(message: string) {\r\n        Logger.GetInstance().Error(message);\r\n    }\r\n\r\n    public Log(message: string): void {\r\n        this.Add({\r\n            message: message,\r\n            date: new Date(),\r\n            type: LogType.Log\r\n        })\r\n    }\r\n\r\n    public Warn(message: string): void {\r\n        this.Add({\r\n            message: message,\r\n            date: new Date(),\r\n            type: LogType.Warning\r\n        })\r\n    }\r\n\r\n    public Error(message: string): void {\r\n        this.Add({\r\n            message: message,\r\n            date: new Date(),\r\n            type: LogType.Error\r\n        })\r\n    }\r\n\r\n    private Format(log: Log): string {\r\n        let icon : string = log.type;\r\n        return `[${\r\n            log.date.getFullYear().toString().padStart(2, \"0\")}-${\r\n            log.date.getMonth().toString().padStart(2, \"0\")}-${\r\n            log.date.getDay().toString().padStart(2, \"0\")} ${\r\n            log.date.getHours().toString().padStart(2, \"0\")}:${\r\n            log.date.getMinutes().toString().padStart(2, \"0\")}:${\r\n            log.date.getSeconds().toString().padStart(2, \"0\")}] ${\r\n            icon} ${\r\n            log.message\r\n        }`\r\n    }\r\n\r\n}\r\n\r\nexport default Logger"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACgBO,IAAM,SAAN,MAAM,QAAO;AAAA,EAMR,cAAc;AAFtB,SAAQ,OAAc,CAAC;AAAA,EAEC;AAAA,EAExB,OAAc,cAAsB;AAChC,QAAI,CAAC,KAAK,UAAU;AAChB,WAAK,WAAW,IAAI,QAAO;AAAA,IAC/B;AACA,WAAO,KAAK;AAAA,EAChB;AAAA,EAEQ,IAAI,KAAU;AAClB,SAAK,KAAK,KAAK,GAAG;AAClB,YAAQ,IAAI,KAAK,OAAO,GAAG,CAAC;AAAA,EAChC;AAAA,EAEA,OAAc,IAAI,SAAiB;AAC/B,YAAO,YAAY,EAAE,IAAI,OAAO;AAAA,EACpC;AAAA,EAEA,OAAc,KAAK,SAAiB;AAChC,YAAO,YAAY,EAAE,KAAK,OAAO;AAAA,EACrC;AAAA,EAEA,OAAc,MAAM,SAAiB;AACjC,YAAO,YAAY,EAAE,MAAM,OAAO;AAAA,EACtC;AAAA,EAEO,IAAI,SAAuB;AAC9B,SAAK,IAAI;AAAA,MACL;AAAA,MACA,MAAM,oBAAI,KAAK;AAAA,MACf,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAAA,EAEO,KAAK,SAAuB;AAC/B,SAAK,IAAI;AAAA,MACL;AAAA,MACA,MAAM,oBAAI,KAAK;AAAA,MACf,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAAA,EAEO,MAAM,SAAuB;AAChC,SAAK,IAAI;AAAA,MACL;AAAA,MACA,MAAM,oBAAI,KAAK;AAAA,MACf,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAAA,EAEQ,OAAO,KAAkB;AAC7B,QAAI,OAAgB,IAAI;AACxB,WAAO,IACH,IAAI,KAAK,YAAY,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,IAClD,IAAI,KAAK,SAAS,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,IAC/C,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,IAC7C,IAAI,KAAK,SAAS,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,IAC/C,IAAI,KAAK,WAAW,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,IACjD,IAAI,KAAK,WAAW,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,KACjD,IAAI,IACJ,IAAI,OACR;AAAA,EACJ;AAEJ;AAEA,IAAO,iBAAQ;;;ADtFf,IAAO,gBAAQ;","names":[]}